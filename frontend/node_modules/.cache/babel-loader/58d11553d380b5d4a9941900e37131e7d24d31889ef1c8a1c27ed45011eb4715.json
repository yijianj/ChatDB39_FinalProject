{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\53068\\\\Documents\\\\GitHub\\\\dsci551_project\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, TextField, Button, Select, MenuItem, FormControl, InputLabel, Box, Typography, Paper, Accordion, AccordionSummary, AccordionDetails, Tabs, Tab } from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport axios from 'axios';\n\n// Utility function to format MongoDB query in shell syntax\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction formatMongoQuery(query, collection = \"listings_meta\") {\n  if (!query) return \"\";\n\n  // Format as MongoDB shell command\n  try {\n    // If it's a string, try to parse it as JSON\n    if (typeof query === \"string\") {\n      try {\n        query = JSON.parse(query);\n      } catch (e) {\n        return query; // Return as is if not valid JSON\n      }\n    }\n\n    // Handle various query types\n    if (Array.isArray(query)) {\n      // It's an aggregation pipeline\n      return `db.${collection}.aggregate(${JSON.stringify(query, null, 2)})`;\n    }\n\n    // Handle query object formats\n    if (typeof query === \"object\") {\n      // Extract collection if specified\n      if (query.collection) {\n        collection = query.collection;\n      }\n\n      // Handle insert operations\n      if (query.operation === \"insert\") {\n        if (query.documents) {\n          // Bulk insert\n          return `db.${collection}.insertMany(${JSON.stringify(query.documents, null, 2)})`;\n        } else if (query.document) {\n          // Single insert\n          return `db.${collection}.insertOne(${JSON.stringify(query.document, null, 2)})`;\n        }\n      }\n\n      // Handle update operations\n      if (query.operation === \"update\") {\n        const multi = query.multi ? \"Many\" : \"One\";\n        return `db.${collection}.update${multi}(\n  ${JSON.stringify(query.filter, null, 2)},\n  ${JSON.stringify(query.update, null, 2)}${query.upsert ? `,\n  { upsert: true }` : \"\"}\n)`;\n      }\n\n      // Handle delete operations\n      if (query.operation === \"delete\") {\n        return `db.${collection}.deleteOne(${JSON.stringify(query.filter, null, 2)})`;\n      }\n\n      // Handle aggregation specified in object\n      if (query.aggregate) {\n        return `db.${collection}.aggregate(${JSON.stringify(query.aggregate, null, 2)})`;\n      }\n\n      // Handle find with various options\n      let findMethod = \"find\";\n      let findOptions = [];\n\n      // Build the find query with options\n      if (query.filter || query.query) {\n        const filter = query.filter || query.query || {};\n        if (query.projection) {\n          findOptions.push(`${JSON.stringify(query.projection, null, 2)}`);\n        }\n        const options = [];\n\n        // Handle sort\n        if (query.sort || query.$sort || query.$orderby) {\n          const sortSpec = query.sort || query.$sort || query.$orderby;\n          options.push(`.sort(${JSON.stringify(sortSpec, null, 2)})`);\n        }\n\n        // Handle limit\n        if (query.limit || query.$limit) {\n          const limitVal = query.limit || query.$limit;\n          options.push(`.limit(${limitVal})`);\n        }\n        const findCommand = `db.${collection}.${findMethod}(${JSON.stringify(filter, null, 2)}${findOptions.length ? \", \" + findOptions.join(\", \") : \"\"})${options.join(\"\")}`;\n        return findCommand;\n      }\n\n      // Default to returning pretty-printed JSON if we can't determine format\n      return `db.${collection}.find(${JSON.stringify(query, null, 2)})`;\n    }\n\n    // If we couldn't parse it, return the original\n    return JSON.stringify(query, null, 2);\n  } catch (e) {\n    console.error(\"Error formatting MongoDB query:\", e);\n    return JSON.stringify(query, null, 2);\n  }\n}\nfunction DataTable({\n  data,\n  title\n}) {\n  if (!data || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      gutterBottom: true,\n      children: [\"No data found for \", title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Collect all unique keys for table headers\n  const allKeys = new Set();\n  data.forEach(item => {\n    Object.keys(item).forEach(key => allKeys.add(key));\n  });\n  const columns = Array.from(allKeys);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mb: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      gutterBottom: true,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        overflowX: 'auto',\n        border: '1px solid #ddd'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          borderCollapse: 'collapse',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: columns.map(col => /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                padding: '8px',\n                background: '#f0f0f0',\n                borderBottom: '1px solid #ccc',\n                textAlign: 'left'\n              },\n              children: col\n            }, col, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: data.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: columns.map(col => /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: '8px',\n                borderBottom: '1px solid #eee',\n                verticalAlign: 'top'\n              },\n              children: row[col] !== null && row[col] !== undefined ? String(row[col]) : ''\n            }, col, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 19\n            }, this))\n          }, rowIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n}\n\n// Component to display schema information\n_c = DataTable;\nfunction SchemaDisplay({\n  data,\n  title\n}) {\n  if (!data || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      gutterBottom: true,\n      children: [\"No schema information available for \", title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mb: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      gutterBottom: true,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        overflowX: 'auto',\n        border: '1px solid #ddd'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          borderCollapse: 'collapse',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.keys(data[0]).map(col => /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                padding: '8px',\n                background: '#f0f0f0',\n                borderBottom: '1px solid #ccc',\n                textAlign: 'left'\n              },\n              children: col\n            }, col, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: data.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.entries(row).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: '8px',\n                borderBottom: '1px solid #eee',\n                verticalAlign: 'top'\n              },\n              children: value !== null && value !== undefined ? String(value) : ''\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 19\n            }, this))\n          }, rowIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n}\n\n// Component to display Firebase/complex schema\n_c2 = SchemaDisplay;\nfunction StructureDisplay({\n  data,\n  title\n}) {\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      gutterBottom: true,\n      children: [\"No structure information available for \", title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mb: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      gutterBottom: true,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 0,\n      sx: {\n        p: 2,\n        backgroundColor: '#f5f5f5'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          margin: 0,\n          overflow: 'auto'\n        },\n        children: JSON.stringify(data, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 5\n  }, this);\n}\n\n// Component to display a list of tables/collections/nodes\n_c3 = StructureDisplay;\nfunction ListDisplay({\n  data,\n  title\n}) {\n  if (!data || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      gutterBottom: true,\n      children: [\"No items found for \", title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mb: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      gutterBottom: true,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        border: '1px solid #ddd',\n        p: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          margin: 0,\n          paddingLeft: 20\n        },\n        children: data.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 285,\n    columnNumber: 5\n  }, this);\n}\n\n// Fields to display in merged results.\n_c4 = ListDisplay;\nconst MERGED_COLUMNS = [\"id\", \"name\", \"price\", \"room_type\", \"listing_url\", \"description\"];\nfunction filterColumns(dataArray, desiredFields) {\n  if (!Array.isArray(dataArray)) return [];\n  return dataArray.map(item => {\n    const filtered = {};\n    desiredFields.forEach(field => {\n      if (item[field] !== undefined) {\n        filtered[field] = item[field];\n      }\n    });\n    return filtered;\n  });\n}\nfunction App() {\n  _s();\n  const [operation, setOperation] = useState('query');\n  const [query, setQuery] = useState('');\n  const [database, setDatabase] = useState('mysql');\n  const [result, setResult] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [showRawResults, setShowRawResults] = useState(true);\n  const [showRawOutput, setShowRawOutput] = useState(false);\n  const [showMySQL, setShowMySQL] = useState(true);\n  const [showMongo, setShowMongo] = useState(true);\n  const [showFirebase, setShowFirebase] = useState(true);\n  const [activeTab, setActiveTab] = useState(0);\n  const [modifyResult, setModifyResult] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setModifyResult(null);\n    try {\n      let response;\n      if (operation === 'query') {\n        response = await axios.post('http://localhost:8000/query', {\n          query,\n          db_type: database\n        });\n      } else if (operation === 'explore') {\n        response = await axios.post('http://localhost:8000/explore', {\n          query,\n          db_type: database\n        });\n      } else if (operation === 'modify') {\n        response = await axios.post('http://localhost:8000/modify', {\n          modification: query,\n          db_type: database\n        });\n        setModifyResult(response.data);\n      }\n      setResult(response.data);\n    } catch (error) {\n      setResult({\n        error: error.message\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleClear = () => {\n    setResult(null);\n    setQuery('');\n    setModifyResult(null);\n  };\n\n  // Parse different types of responses\n  const isExploration = operation === 'explore' && result && result.exploration_type;\n  const explorationData = isExploration ? result : null;\n\n  // Regular query response handling\n  const converted = !isExploration && result ? result.converted_queries : null;\n  const results = !isExploration && result ? result.results : null;\n  const {\n    mysql,\n    mongodb,\n    firebase\n  } = results || {};\n\n  // Modified result checking logic\n  const hasMySQL = mysql && (Array.isArray(mysql) ? mysql.length > 0 : true);\n  const hasMongoDB = mongodb && typeof mongodb === 'object' && Object.keys(mongodb).length > 0;\n  const hasFirebase = firebase && typeof firebase === 'object' && Object.keys(firebase).length > 0;\n\n  // Debug logging\n  console.log('Result:', result);\n  console.log('Results:', results);\n  console.log('MySQL:', mysql);\n  console.log('MongoDB:', mongodb);\n  console.log('Firebase:', firebase);\n\n  // Render exploration content based on result type\n  const renderExplorationContent = () => {\n    if (!explorationData) return null;\n    const {\n      exploration_type,\n      message,\n      data,\n      db_type\n    } = explorationData;\n    switch (exploration_type) {\n      case 'tables':\n      case 'collections':\n      case 'nodes':\n        return /*#__PURE__*/_jsxDEV(ListDisplay, {\n          data: data,\n          title: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 16\n        }, this);\n      case 'schema':\n        if (db_type === 'firebase') {\n          return /*#__PURE__*/_jsxDEV(StructureDisplay, {\n            data: data,\n            title: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 18\n          }, this);\n        }\n        return /*#__PURE__*/_jsxDEV(SchemaDisplay, {\n          data: data,\n          title: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 16\n        }, this);\n      case 'sample_data':\n        return /*#__PURE__*/_jsxDEV(DataTable, {\n          data: data,\n          title: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 16\n        }, this);\n      case 'error':\n        return /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"error\",\n          variant: \"body1\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 11\n        }, this);\n      default:\n        // If we get regular query results through exploration endpoint\n        if (data && Array.isArray(data)) {\n          return /*#__PURE__*/_jsxDEV(DataTable, {\n            data: data,\n            title: \"Exploration Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 18\n          }, this);\n        }\n        return /*#__PURE__*/_jsxDEV(\"pre\", {\n          style: {\n            backgroundColor: '#f5f5f5',\n            padding: '8px',\n            overflowX: 'auto'\n          },\n          children: JSON.stringify(explorationData, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this);\n    }\n  };\n  const getExampleQueries = () => {\n    switch (operation) {\n      case 'explore':\n        return [\"What tables are in the database?\", \"Show me the schema of the Listings table\", \"What columns are in the Reviews table?\", \"Show me 5 sample rows from the Hosts table\", \"What collections are in MongoDB?\", \"Show me the structure of the Firebase listings node\"];\n      case 'modify':\n        return [\"Add a new listing with name 'Luxury Apartment' and price 200\", \"Delete the listing with id 123\", \"Update the price of listing with id 456 to 300\", \"Insert a new review for listing 789 with rating 5\"];\n      case 'query':\n      default:\n        return [\"Show me listings with more than 50 reviews\", \"Find all listings with price less than $100\", \"Get listings in Manhattan with 2 or more bedrooms\", \"Show me the most expensive listings\"];\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      mt: 4,\n      mb: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 3,\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"ChatDB - Natural Language Interface\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Operation Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: operation,\n              label: \"Operation Type\",\n              onChange: e => setOperation(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"query\",\n                children: \"Query\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"explore\",\n                children: \"Explore Schema\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"modify\",\n                children: \"Modify Data\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 483,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Database\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: database,\n              label: \"Database\",\n              onChange: e => setDatabase(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"mysql\",\n                children: \"MySQL\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 496,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"mongodb\",\n                children: \"MongoDB\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 497,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"firebase\",\n                children: \"Firebase\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 498,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            multiline: true,\n            rows: 4,\n            label: operation === 'query' ? \"Enter your query in natural language\" : operation === 'explore' ? \"Enter your schema exploration question\" : \"Enter your data modification request\",\n            value: query,\n            onChange: e => setQuery(e.target.value),\n            placeholder: operation === 'query' ? \"e.g., Show me the listings with the highest number of reviews\" : operation === 'explore' ? \"e.g., What tables are in the database? or Show me the schema of Listings table\" : \"e.g., Add a new listing with name 'Luxury Apartment' and price 200\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            children: \"Example questions:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              flexWrap: 'wrap',\n              gap: 1,\n              mt: 0.5\n            },\n            children: getExampleQueries().map((example, i) => /*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              variant: \"outlined\",\n              onClick: () => setQuery(example),\n              sx: {\n                mb: 1\n              },\n              children: example\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            gap: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            type: \"submit\",\n            disabled: loading || !query,\n            fullWidth: true,\n            children: loading ? 'Processing...' : operation === 'query' ? 'Execute Query' : operation === 'explore' ? 'Explore' : 'Modify Data'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"error\",\n            onClick: handleClear,\n            disabled: loading || !query && !result,\n            fullWidth: true,\n            children: \"Clear All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 3,\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: operation === 'explore' ? 'Schema Exploration Results' : operation === 'modify' ? 'Modification Results' : 'Query Results'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 11\n      }, this), operation === 'modify' && modifyResult ? /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          color: modifyResult.success ? 'success.main' : 'error.main',\n          gutterBottom: true,\n          children: modifyResult.message || \"Modification processed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            children: \"Converted Modifications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            style: {\n              backgroundColor: '#f5f5f5',\n              padding: '8px',\n              overflowX: 'auto'\n            },\n            children: JSON.stringify(modifyResult.converted_modifications, null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 17\n          }, this), modifyResult.converted_modifications && modifyResult.converted_modifications.mongodb && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle2\",\n              gutterBottom: true,\n              children: \"MongoDB Shell Syntax:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 599,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 0,\n              sx: {\n                p: 2,\n                bgcolor: '#f8f9fa'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"pre\", {\n                style: {\n                  margin: 0\n                },\n                children: formatMongoQuery(modifyResult.converted_modifications.mongodb)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 601,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 600,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 15\n        }, this), modifyResult.results && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            children: \"Modification Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 610,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            style: {\n              backgroundColor: '#f5f5f5',\n              padding: '8px',\n              overflowX: 'auto'\n            },\n            children: JSON.stringify(modifyResult.results, null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 13\n      }, this) : isExploration ? renderExplorationContent() : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 2,\n            display: 'flex',\n            justifyContent: 'flex-end',\n            gap: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"text\",\n            onClick: () => setShowRawResults(!showRawResults),\n            children: showRawResults ? 'Hide Converted Queries' : 'Show Converted Queries'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"text\",\n            onClick: () => setShowRawOutput(!showRawOutput),\n            children: showRawOutput ? 'Hide Raw Output' : 'Show Raw Output'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 631,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 624,\n          columnNumber: 15\n        }, this), showRawResults && converted && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            children: \"Converted Queries\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 641,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            style: {\n              backgroundColor: '#f5f5f5',\n              padding: '8px',\n              overflowX: 'auto'\n            },\n            children: JSON.stringify(converted, null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 644,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 17\n        }, this), showRawOutput && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            children: \"Raw Output\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            style: {\n              backgroundColor: '#f5f5f5',\n              padding: '8px',\n              overflowX: 'auto'\n            },\n            children: JSON.stringify(result, null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          gutterBottom: true,\n          children: \"Individual Database Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 15\n        }, this), database === 'mysql' && /*#__PURE__*/_jsxDEV(Accordion, {\n          expanded: showMySQL,\n          onChange: () => setShowMySQL(!showMySQL),\n          children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n            expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 667,\n              columnNumber: 49\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              children: \"MySQL Results\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 668,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n            children: hasMySQL ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [converted && converted.mysql && /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mb: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  gutterBottom: true,\n                  children: \"Executed Query:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 675,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Paper, {\n                  elevation: 0,\n                  sx: {\n                    p: 2,\n                    bgcolor: '#f8f9fa',\n                    mb: 2\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"code\", {\n                    children: converted.mysql\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 677,\n                    columnNumber: 31\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 676,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 674,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n                data: Array.isArray(mysql) ? mysql : [mysql],\n                title: \"MySQL\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 681,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: \"No results from MySQL.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 17\n        }, this), database === 'mongodb' && /*#__PURE__*/_jsxDEV(Accordion, {\n          expanded: showMongo,\n          onChange: () => setShowMongo(!showMongo),\n          children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n            expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 693,\n              columnNumber: 49\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              children: \"MongoDB Results\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 694,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 693,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n            children: hasMongoDB ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [converted && converted.mongodb && /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mb: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  gutterBottom: true,\n                  children: \"Executed Query:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 701,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Paper, {\n                  elevation: 0,\n                  sx: {\n                    p: 2,\n                    bgcolor: '#f8f9fa',\n                    mb: 2\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"pre\", {\n                    style: {\n                      margin: 0\n                    },\n                    children: formatMongoQuery(converted.mongodb)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 703,\n                    columnNumber: 31\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 702,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 700,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n                data: Array.isArray(mongodb) ? mongodb : [mongodb],\n                title: \"MongoDB\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 709,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: \"No results from MongoDB.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 715,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 696,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 692,\n          columnNumber: 17\n        }, this), database === 'firebase' && /*#__PURE__*/_jsxDEV(Accordion, {\n          expanded: showFirebase,\n          onChange: () => setShowFirebase(!showFirebase),\n          children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n            expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 724,\n              columnNumber: 49\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              children: \"Firebase Results\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 725,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 724,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n            children: hasFirebase ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [converted && converted.firebase && /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mb: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  gutterBottom: true,\n                  children: \"Executed Query:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 732,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Paper, {\n                  elevation: 0,\n                  sx: {\n                    p: 2,\n                    bgcolor: '#f8f9fa',\n                    mb: 2\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"pre\", {\n                    style: {\n                      margin: 0\n                    },\n                    children: typeof converted.firebase === 'string' ? converted.firebase : JSON.stringify(converted.firebase, null, 2)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 734,\n                    columnNumber: 31\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 733,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 731,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                style: {\n                  backgroundColor: '#f5f5f5',\n                  padding: '8px'\n                },\n                children: JSON.stringify(firebase, null, 2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 742,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: \"No results from Firebase.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 747,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 727,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 723,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 466,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"YfUQ8IZhOgOR86j2ytXMao+dDMU=\");\n_c5 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"DataTable\");\n$RefreshReg$(_c2, \"SchemaDisplay\");\n$RefreshReg$(_c3, \"StructureDisplay\");\n$RefreshReg$(_c4, \"ListDisplay\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["React","useState","Container","TextField","Button","Select","MenuItem","FormControl","InputLabel","Box","Typography","Paper","Accordion","AccordionSummary","AccordionDetails","Tabs","Tab","ExpandMoreIcon","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","formatMongoQuery","query","collection","JSON","parse","e","Array","isArray","stringify","operation","documents","document","multi","filter","update","upsert","aggregate","findMethod","findOptions","projection","push","options","sort","$sort","$orderby","sortSpec","limit","$limit","limitVal","findCommand","length","join","console","error","DataTable","data","title","variant","gutterBottom","children","fileName","_jsxFileName","lineNumber","columnNumber","allKeys","Set","forEach","item","Object","keys","key","add","columns","from","sx","mb","overflowX","border","style","borderCollapse","width","map","col","padding","background","borderBottom","textAlign","row","rowIndex","verticalAlign","undefined","String","_c","SchemaDisplay","entries","value","_c2","StructureDisplay","elevation","p","backgroundColor","margin","overflow","_c3","ListDisplay","paddingLeft","index","_c4","MERGED_COLUMNS","filterColumns","dataArray","desiredFields","filtered","field","App","_s","setOperation","setQuery","database","setDatabase","result","setResult","loading","setLoading","showRawResults","setShowRawResults","showRawOutput","setShowRawOutput","showMySQL","setShowMySQL","showMongo","setShowMongo","showFirebase","setShowFirebase","activeTab","setActiveTab","modifyResult","setModifyResult","handleSubmit","preventDefault","response","post","db_type","modification","message","handleClear","isExploration","exploration_type","explorationData","converted","converted_queries","results","mysql","mongodb","firebase","hasMySQL","hasMongoDB","hasFirebase","log","renderExplorationContent","color","getExampleQueries","maxWidth","mt","onSubmit","fullWidth","label","onChange","target","multiline","rows","placeholder","display","flexWrap","gap","example","i","size","onClick","type","disabled","success","converted_modifications","bgcolor","justifyContent","expanded","expandIcon","_c5","$RefreshReg$"],"sources":["C:/Users/53068/Documents/GitHub/dsci551_project/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Container,\r\n  TextField,\r\n  Button,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  Box,\r\n  Typography,\r\n  Paper,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Tabs,\r\n  Tab\r\n} from '@mui/material';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport axios from 'axios';\r\n\r\n// Utility function to format MongoDB query in shell syntax\r\nfunction formatMongoQuery(query, collection = \"listings_meta\") {\r\n  if (!query) return \"\";\r\n  \r\n  // Format as MongoDB shell command\r\n  try {\r\n    // If it's a string, try to parse it as JSON\r\n    if (typeof query === \"string\") {\r\n      try {\r\n        query = JSON.parse(query);\r\n      } catch (e) {\r\n        return query; // Return as is if not valid JSON\r\n      }\r\n    }\r\n    \r\n    // Handle various query types\r\n    if (Array.isArray(query)) {\r\n      // It's an aggregation pipeline\r\n      return `db.${collection}.aggregate(${JSON.stringify(query, null, 2)})`;\r\n    }\r\n    \r\n    // Handle query object formats\r\n    if (typeof query === \"object\") {\r\n      // Extract collection if specified\r\n      if (query.collection) {\r\n        collection = query.collection;\r\n      }\r\n      \r\n      // Handle insert operations\r\n      if (query.operation === \"insert\") {\r\n        if (query.documents) {\r\n          // Bulk insert\r\n          return `db.${collection}.insertMany(${JSON.stringify(query.documents, null, 2)})`;\r\n        } else if (query.document) {\r\n          // Single insert\r\n          return `db.${collection}.insertOne(${JSON.stringify(query.document, null, 2)})`;\r\n        }\r\n      }\r\n      \r\n      // Handle update operations\r\n      if (query.operation === \"update\") {\r\n        const multi = query.multi ? \"Many\" : \"One\";\r\n        return `db.${collection}.update${multi}(\r\n  ${JSON.stringify(query.filter, null, 2)},\r\n  ${JSON.stringify(query.update, null, 2)}${query.upsert ? `,\r\n  { upsert: true }` : \"\"}\r\n)`;\r\n      }\r\n      \r\n      // Handle delete operations\r\n      if (query.operation === \"delete\") {\r\n        return `db.${collection}.deleteOne(${JSON.stringify(query.filter, null, 2)})`;\r\n      }\r\n      \r\n      // Handle aggregation specified in object\r\n      if (query.aggregate) {\r\n        return `db.${collection}.aggregate(${JSON.stringify(query.aggregate, null, 2)})`;\r\n      }\r\n      \r\n      // Handle find with various options\r\n      let findMethod = \"find\";\r\n      let findOptions = [];\r\n      \r\n      // Build the find query with options\r\n      if (query.filter || query.query) {\r\n        const filter = query.filter || query.query || {};\r\n        \r\n        if (query.projection) {\r\n          findOptions.push(`${JSON.stringify(query.projection, null, 2)}`);\r\n        }\r\n        \r\n        const options = [];\r\n        \r\n        // Handle sort\r\n        if (query.sort || query.$sort || query.$orderby) {\r\n          const sortSpec = query.sort || query.$sort || query.$orderby;\r\n          options.push(`.sort(${JSON.stringify(sortSpec, null, 2)})`);\r\n        }\r\n        \r\n        // Handle limit\r\n        if (query.limit || query.$limit) {\r\n          const limitVal = query.limit || query.$limit;\r\n          options.push(`.limit(${limitVal})`);\r\n        }\r\n        \r\n        const findCommand = `db.${collection}.${findMethod}(${JSON.stringify(filter, null, 2)}${\r\n          findOptions.length ? \", \" + findOptions.join(\", \") : \"\"\r\n        })${options.join(\"\")}`;\r\n        \r\n        return findCommand;\r\n      }\r\n      \r\n      // Default to returning pretty-printed JSON if we can't determine format\r\n      return `db.${collection}.find(${JSON.stringify(query, null, 2)})`;\r\n    }\r\n    \r\n    // If we couldn't parse it, return the original\r\n    return JSON.stringify(query, null, 2);\r\n  } catch (e) {\r\n    console.error(\"Error formatting MongoDB query:\", e);\r\n    return JSON.stringify(query, null, 2);\r\n  }\r\n}\r\n\r\nfunction DataTable({ data, title }) {\r\n  if (!data || data.length === 0) {\r\n    return (\r\n      <Typography variant=\"subtitle1\" gutterBottom>\r\n        No data found for {title}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n  // Collect all unique keys for table headers\r\n  const allKeys = new Set();\r\n  data.forEach((item) => {\r\n    Object.keys(item).forEach((key) => allKeys.add(key));\r\n  });\r\n  const columns = Array.from(allKeys);\r\n\r\n  return (\r\n    <Box sx={{ mb: 2 }}>\r\n      <Typography variant=\"subtitle1\" gutterBottom>\r\n        {title}\r\n      </Typography>\r\n      <Box sx={{ overflowX: 'auto', border: '1px solid #ddd' }}>\r\n        <table style={{ borderCollapse: 'collapse', width: '100%' }}>\r\n          <thead>\r\n            <tr>\r\n              {columns.map((col) => (\r\n                <th\r\n                  key={col}\r\n                  style={{\r\n                    padding: '8px',\r\n                    background: '#f0f0f0',\r\n                    borderBottom: '1px solid #ccc',\r\n                    textAlign: 'left'\r\n                  }}\r\n                >\r\n                  {col}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.map((row, rowIndex) => (\r\n              <tr key={rowIndex}>\r\n                {columns.map((col) => (\r\n                  <td\r\n                    key={col}\r\n                    style={{\r\n                      padding: '8px',\r\n                      borderBottom: '1px solid #eee',\r\n                      verticalAlign: 'top'\r\n                    }}\r\n                  >\r\n                    {row[col] !== null && row[col] !== undefined\r\n                      ? String(row[col])\r\n                      : ''}\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\n// Component to display schema information\r\nfunction SchemaDisplay({ data, title }) {\r\n  if (!data || data.length === 0) {\r\n    return (\r\n      <Typography variant=\"subtitle1\" gutterBottom>\r\n        No schema information available for {title}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ mb: 2 }}>\r\n      <Typography variant=\"subtitle1\" gutterBottom>\r\n        {title}\r\n      </Typography>\r\n      <Box sx={{ overflowX: 'auto', border: '1px solid #ddd' }}>\r\n        <table style={{ borderCollapse: 'collapse', width: '100%' }}>\r\n          <thead>\r\n            <tr>\r\n              {Object.keys(data[0]).map((col) => (\r\n                <th\r\n                  key={col}\r\n                  style={{\r\n                    padding: '8px',\r\n                    background: '#f0f0f0',\r\n                    borderBottom: '1px solid #ccc',\r\n                    textAlign: 'left'\r\n                  }}\r\n                >\r\n                  {col}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.map((row, rowIndex) => (\r\n              <tr key={rowIndex}>\r\n                {Object.entries(row).map(([key, value]) => (\r\n                  <td\r\n                    key={key}\r\n                    style={{\r\n                      padding: '8px',\r\n                      borderBottom: '1px solid #eee',\r\n                      verticalAlign: 'top'\r\n                    }}\r\n                  >\r\n                    {value !== null && value !== undefined ? String(value) : ''}\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\n// Component to display Firebase/complex schema\r\nfunction StructureDisplay({ data, title }) {\r\n  if (!data) {\r\n    return (\r\n      <Typography variant=\"subtitle1\" gutterBottom>\r\n        No structure information available for {title}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ mb: 2 }}>\r\n      <Typography variant=\"subtitle1\" gutterBottom>\r\n        {title}\r\n      </Typography>\r\n      <Paper elevation={0} sx={{ p: 2, backgroundColor: '#f5f5f5' }}>\r\n        <pre style={{ margin: 0, overflow: 'auto' }}>\r\n          {JSON.stringify(data, null, 2)}\r\n        </pre>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}\r\n\r\n// Component to display a list of tables/collections/nodes\r\nfunction ListDisplay({ data, title }) {\r\n  if (!data || data.length === 0) {\r\n    return (\r\n      <Typography variant=\"subtitle1\" gutterBottom>\r\n        No items found for {title}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ mb: 2 }}>\r\n      <Typography variant=\"subtitle1\" gutterBottom>\r\n        {title}\r\n      </Typography>\r\n      <Box sx={{ border: '1px solid #ddd', p: 2 }}>\r\n        <ul style={{ margin: 0, paddingLeft: 20 }}>\r\n          {data.map((item, index) => (\r\n            <li key={index}>{item}</li>\r\n          ))}\r\n        </ul>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\n// Fields to display in merged results.\r\nconst MERGED_COLUMNS = [\r\n  \"id\",\r\n  \"name\",\r\n  \"price\",\r\n  \"room_type\",\r\n  \"listing_url\",\r\n  \"description\"\r\n];\r\n\r\nfunction filterColumns(dataArray, desiredFields) {\r\n  if (!Array.isArray(dataArray)) return [];\r\n  return dataArray.map(item => {\r\n    const filtered = {};\r\n    desiredFields.forEach(field => {\r\n      if (item[field] !== undefined) {\r\n        filtered[field] = item[field];\r\n      }\r\n    });\r\n    return filtered;\r\n  });\r\n}\r\n\r\nfunction App() {\r\n  const [operation, setOperation] = useState('query');\r\n  const [query, setQuery] = useState('');\r\n  const [database, setDatabase] = useState('mysql');\r\n  const [result, setResult] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [showRawResults, setShowRawResults] = useState(true);\r\n  const [showRawOutput, setShowRawOutput] = useState(false);\r\n  const [showMySQL, setShowMySQL] = useState(true);\r\n  const [showMongo, setShowMongo] = useState(true);\r\n  const [showFirebase, setShowFirebase] = useState(true);\r\n  const [activeTab, setActiveTab] = useState(0);\r\n  const [modifyResult, setModifyResult] = useState(null);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setModifyResult(null);\r\n    try {\r\n      let response;\r\n      if (operation === 'query') {\r\n        response = await axios.post('http://localhost:8000/query', {\r\n          query,\r\n          db_type: database\r\n        });\r\n      } else if (operation === 'explore') {\r\n        response = await axios.post('http://localhost:8000/explore', {\r\n          query,\r\n          db_type: database\r\n        });\r\n      } else if (operation === 'modify') {\r\n        response = await axios.post('http://localhost:8000/modify', {\r\n          modification: query,\r\n          db_type: database\r\n        });\r\n        setModifyResult(response.data);\r\n      }\r\n      setResult(response.data);\r\n    } catch (error) {\r\n      setResult({ error: error.message });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setResult(null);\r\n    setQuery('');\r\n    setModifyResult(null);\r\n  };\r\n\r\n  // Parse different types of responses\r\n  const isExploration = operation === 'explore' && result && result.exploration_type;\r\n  const explorationData = isExploration ? result : null;\r\n  \r\n  // Regular query response handling\r\n  const converted = !isExploration && result ? result.converted_queries : null;\r\n  const results = !isExploration && result ? result.results : null;\r\n  const { mysql, mongodb, firebase } = results || {};\r\n\r\n  // Modified result checking logic\r\n  const hasMySQL = mysql && (Array.isArray(mysql) ? mysql.length > 0 : true);\r\n  const hasMongoDB = mongodb && (typeof mongodb === 'object' && Object.keys(mongodb).length > 0);\r\n  const hasFirebase = firebase && (typeof firebase === 'object' && Object.keys(firebase).length > 0);\r\n\r\n  // Debug logging\r\n  console.log('Result:', result);\r\n  console.log('Results:', results);\r\n  console.log('MySQL:', mysql);\r\n  console.log('MongoDB:', mongodb);\r\n  console.log('Firebase:', firebase);\r\n\r\n  // Render exploration content based on result type\r\n  const renderExplorationContent = () => {\r\n    if (!explorationData) return null;\r\n\r\n    const { exploration_type, message, data, db_type } = explorationData;\r\n\r\n    switch (exploration_type) {\r\n      case 'tables':\r\n      case 'collections':\r\n      case 'nodes':\r\n        return <ListDisplay data={data} title={message} />;\r\n      \r\n      case 'schema':\r\n        if (db_type === 'firebase') {\r\n          return <StructureDisplay data={data} title={message} />;\r\n        }\r\n        return <SchemaDisplay data={data} title={message} />;\r\n      \r\n      case 'sample_data':\r\n        return <DataTable data={data} title={message} />;\r\n      \r\n      case 'error':\r\n        return (\r\n          <Typography color=\"error\" variant=\"body1\">\r\n            {message}\r\n          </Typography>\r\n        );\r\n      \r\n      default:\r\n        // If we get regular query results through exploration endpoint\r\n        if (data && Array.isArray(data)) {\r\n          return <DataTable data={data} title=\"Exploration Results\" />;\r\n        }\r\n        return (\r\n          <pre style={{ backgroundColor: '#f5f5f5', padding: '8px', overflowX: 'auto' }}>\r\n            {JSON.stringify(explorationData, null, 2)}\r\n          </pre>\r\n        );\r\n    }\r\n  };\r\n\r\n  const getExampleQueries = () => {\r\n    switch (operation) {\r\n      case 'explore':\r\n        return [\r\n          \"What tables are in the database?\",\r\n          \"Show me the schema of the Listings table\",\r\n          \"What columns are in the Reviews table?\",\r\n          \"Show me 5 sample rows from the Hosts table\",\r\n          \"What collections are in MongoDB?\",\r\n          \"Show me the structure of the Firebase listings node\"\r\n        ];\r\n      case 'modify':\r\n        return [\r\n          \"Add a new listing with name 'Luxury Apartment' and price 200\",\r\n          \"Delete the listing with id 123\",\r\n          \"Update the price of listing with id 456 to 300\",\r\n          \"Insert a new review for listing 789 with rating 5\"\r\n        ];\r\n      case 'query':\r\n      default:\r\n        return [\r\n          \"Show me listings with more than 50 reviews\",\r\n          \"Find all listings with price less than $100\",\r\n          \"Get listings in Manhattan with 2 or more bedrooms\",\r\n          \"Show me the most expensive listings\"\r\n        ];\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n      {/* Query/Exploration Form Section */}\r\n      <Paper elevation={3} sx={{ p: 3, mb: 3 }}>\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          ChatDB - Natural Language Interface\r\n        </Typography>\r\n        <form onSubmit={handleSubmit}>\r\n          <Box sx={{ mb: 2 }}>\r\n            <FormControl fullWidth>\r\n              <InputLabel>Operation Type</InputLabel>\r\n              <Select\r\n                value={operation}\r\n                label=\"Operation Type\"\r\n                onChange={(e) => setOperation(e.target.value)}\r\n              >\r\n                <MenuItem value=\"query\">Query</MenuItem>\r\n                <MenuItem value=\"explore\">Explore Schema</MenuItem>\r\n                <MenuItem value=\"modify\">Modify Data</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Box>\r\n\r\n          <Box sx={{ mb: 2 }}>\r\n            <FormControl fullWidth>\r\n              <InputLabel>Database</InputLabel>\r\n              <Select\r\n                value={database}\r\n                label=\"Database\"\r\n                onChange={(e) => setDatabase(e.target.value)}\r\n              >\r\n                <MenuItem value=\"mysql\">MySQL</MenuItem>\r\n                <MenuItem value=\"mongodb\">MongoDB</MenuItem>\r\n                <MenuItem value=\"firebase\">Firebase</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Box>\r\n\r\n          <Box sx={{ mb: 2 }}>\r\n            <TextField\r\n              fullWidth\r\n              multiline\r\n              rows={4}\r\n              label={\r\n                operation === 'query'\r\n                  ? \"Enter your query in natural language\"\r\n                  : operation === 'explore'\r\n                  ? \"Enter your schema exploration question\"\r\n                  : \"Enter your data modification request\"\r\n              }\r\n              value={query}\r\n              onChange={(e) => setQuery(e.target.value)}\r\n              placeholder={\r\n                operation === 'query'\r\n                  ? \"e.g., Show me the listings with the highest number of reviews\"\r\n                  : operation === 'explore'\r\n                  ? \"e.g., What tables are in the database? or Show me the schema of Listings table\"\r\n                  : \"e.g., Add a new listing with name 'Luxury Apartment' and price 200\"\r\n              }\r\n            />\r\n          </Box>\r\n\r\n          <Box sx={{ mb: 1 }}>\r\n            <Typography variant=\"body2\" color=\"textSecondary\">\r\n              Example questions:\r\n            </Typography>\r\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mt: 0.5 }}>\r\n              {getExampleQueries().map((example, i) => (\r\n                <Button \r\n                  key={i} \r\n                  size=\"small\" \r\n                  variant=\"outlined\" \r\n                  onClick={() => setQuery(example)}\r\n                  sx={{ mb: 1 }}\r\n                >\r\n                  {example}\r\n                </Button>\r\n              ))}\r\n            </Box>\r\n          </Box>\r\n\r\n          <Box sx={{ display: 'flex', gap: 2 }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              disabled={loading || !query}\r\n              fullWidth\r\n            >\r\n              {loading ? 'Processing...' : (\r\n                operation === 'query' ? 'Execute Query' :\r\n                operation === 'explore' ? 'Explore' :\r\n                'Modify Data'\r\n              )}\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"error\"\r\n              onClick={handleClear}\r\n              disabled={loading || (!query && !result)}\r\n              fullWidth\r\n            >\r\n              Clear All\r\n            </Button>\r\n          </Box>\r\n        </form>\r\n      </Paper>\r\n\r\n      {/* Results Section */}\r\n      {result && (\r\n        <Paper elevation={3} sx={{ p: 3, mb: 3 }}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            {operation === 'explore' ? 'Schema Exploration Results' : \r\n             operation === 'modify' ? 'Modification Results' : 'Query Results'}\r\n          </Typography>\r\n\r\n          {operation === 'modify' && modifyResult ? (\r\n            <Box sx={{ mb: 3 }}>\r\n              <Typography \r\n                variant=\"subtitle1\" \r\n                color={modifyResult.success ? 'success.main' : 'error.main'}\r\n                gutterBottom\r\n              >\r\n                {modifyResult.message || \"Modification processed\"}\r\n              </Typography>\r\n              <Box sx={{ mb: 3 }}>\r\n                <Typography variant=\"subtitle1\" gutterBottom>\r\n                  Converted Modifications\r\n                </Typography>\r\n                <pre style={{ backgroundColor: '#f5f5f5', padding: '8px', overflowX: 'auto' }}>\r\n                  {JSON.stringify(modifyResult.converted_modifications, null, 2)}\r\n                </pre>\r\n                \r\n                {modifyResult.converted_modifications && modifyResult.converted_modifications.mongodb && (\r\n                  <Box sx={{ mt: 2 }}>\r\n                    <Typography variant=\"subtitle2\" gutterBottom>MongoDB Shell Syntax:</Typography>\r\n                    <Paper elevation={0} sx={{ p: 2, bgcolor: '#f8f9fa' }}>\r\n                      <pre style={{ margin: 0 }}>\r\n                        {formatMongoQuery(modifyResult.converted_modifications.mongodb)}\r\n                      </pre>\r\n                    </Paper>\r\n                  </Box>\r\n                )}\r\n              </Box>\r\n              {modifyResult.results && (\r\n                <Box sx={{ mb: 3 }}>\r\n                  <Typography variant=\"subtitle1\" gutterBottom>\r\n                    Modification Results\r\n                  </Typography>\r\n                  <pre style={{ backgroundColor: '#f5f5f5', padding: '8px', overflowX: 'auto' }}>\r\n                    {JSON.stringify(modifyResult.results, null, 2)}\r\n                  </pre>\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          ) : isExploration ? (\r\n            renderExplorationContent()\r\n          ) : (\r\n            <>\r\n              {/* Toggle for Converted Queries and Raw Output */}\r\n              <Box sx={{ mb: 2, display: 'flex', justifyContent: 'flex-end', gap: 2 }}>\r\n                <Button\r\n                  variant=\"text\"\r\n                  onClick={() => setShowRawResults(!showRawResults)}\r\n                >\r\n                  {showRawResults ? 'Hide Converted Queries' : 'Show Converted Queries'}\r\n                </Button>\r\n                <Button\r\n                  variant=\"text\"\r\n                  onClick={() => setShowRawOutput(!showRawOutput)}\r\n                >\r\n                  {showRawOutput ? 'Hide Raw Output' : 'Show Raw Output'}\r\n                </Button>\r\n              </Box>\r\n\r\n              {showRawResults && converted && (\r\n                <Box sx={{ mb: 3 }}>\r\n                  <Typography variant=\"subtitle1\" gutterBottom>\r\n                    Converted Queries\r\n                  </Typography>\r\n                  <pre style={{ backgroundColor: '#f5f5f5', padding: '8px', overflowX: 'auto' }}>\r\n                    {JSON.stringify(converted, null, 2)}\r\n                  </pre>\r\n                </Box>\r\n              )}\r\n              \r\n              {showRawOutput && (\r\n                <Box sx={{ mb: 3 }}>\r\n                  <Typography variant=\"subtitle1\" gutterBottom>\r\n                    Raw Output\r\n                  </Typography>\r\n                  <pre style={{ backgroundColor: '#f5f5f5', padding: '8px', overflowX: 'auto' }}>\r\n                    {JSON.stringify(result, null, 2)}\r\n                  </pre>\r\n                </Box>\r\n              )}\r\n\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                Individual Database Results\r\n              </Typography>\r\n              {/* MySQL 结果 */}\r\n              {database === 'mysql' && (\r\n                <Accordion expanded={showMySQL} onChange={() => setShowMySQL(!showMySQL)}>\r\n                  <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                    <Typography variant=\"subtitle1\">MySQL Results</Typography>\r\n                  </AccordionSummary>\r\n                  <AccordionDetails>\r\n                    {hasMySQL ? (\r\n                      <>\r\n                        {converted && converted.mysql && (\r\n                          <Box sx={{ mb: 2 }}>\r\n                            <Typography variant=\"subtitle2\" gutterBottom>Executed Query:</Typography>\r\n                            <Paper elevation={0} sx={{ p: 2, bgcolor: '#f8f9fa', mb: 2 }}>\r\n                              <code>{converted.mysql}</code>\r\n                            </Paper>\r\n                          </Box>\r\n                        )}\r\n                        <DataTable data={Array.isArray(mysql) ? mysql : [mysql]} title=\"MySQL\" />\r\n                      </>\r\n                    ) : (\r\n                      <Typography variant=\"body2\">No results from MySQL.</Typography>\r\n                    )}\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n              )}\r\n\r\n              {/* MongoDB 结果 */}\r\n              {database === 'mongodb' && (\r\n                <Accordion expanded={showMongo} onChange={() => setShowMongo(!showMongo)}>\r\n                  <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                    <Typography variant=\"subtitle1\">MongoDB Results</Typography>\r\n                  </AccordionSummary>\r\n                  <AccordionDetails>\r\n                    {hasMongoDB ? (\r\n                      <>\r\n                        {converted && converted.mongodb && (\r\n                          <Box sx={{ mb: 2 }}>\r\n                            <Typography variant=\"subtitle2\" gutterBottom>Executed Query:</Typography>\r\n                            <Paper elevation={0} sx={{ p: 2, bgcolor: '#f8f9fa', mb: 2 }}>\r\n                              <pre style={{ margin: 0 }}>\r\n                                {formatMongoQuery(converted.mongodb)}\r\n                              </pre>\r\n                            </Paper>\r\n                          </Box>\r\n                        )}\r\n                        <DataTable \r\n                          data={Array.isArray(mongodb) ? mongodb : [mongodb]} \r\n                          title=\"MongoDB\" \r\n                        />\r\n                      </>\r\n                    ) : (\r\n                      <Typography variant=\"body2\">No results from MongoDB.</Typography>\r\n                    )}\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n              )}\r\n\r\n              {/* Firebase 结果 */}\r\n              {database === 'firebase' && (\r\n                <Accordion expanded={showFirebase} onChange={() => setShowFirebase(!showFirebase)}>\r\n                  <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                    <Typography variant=\"subtitle1\">Firebase Results</Typography>\r\n                  </AccordionSummary>\r\n                  <AccordionDetails>\r\n                    {hasFirebase ? (\r\n                      <>\r\n                        {converted && converted.firebase && (\r\n                          <Box sx={{ mb: 2 }}>\r\n                            <Typography variant=\"subtitle2\" gutterBottom>Executed Query:</Typography>\r\n                            <Paper elevation={0} sx={{ p: 2, bgcolor: '#f8f9fa', mb: 2 }}>\r\n                              <pre style={{ margin: 0 }}>\r\n                                {typeof converted.firebase === 'string' \r\n                                  ? converted.firebase \r\n                                  : JSON.stringify(converted.firebase, null, 2)}\r\n                              </pre>\r\n                            </Paper>\r\n                          </Box>\r\n                        )}\r\n                        <pre style={{ backgroundColor: '#f5f5f5', padding: '8px' }}>\r\n                          {JSON.stringify(firebase, null, 2)}\r\n                        </pre>\r\n                      </>\r\n                    ) : (\r\n                      <Typography variant=\"body2\">No results from Firebase.</Typography>\r\n                    )}\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n              )}\r\n            </>\r\n          )}\r\n        </Paper>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}