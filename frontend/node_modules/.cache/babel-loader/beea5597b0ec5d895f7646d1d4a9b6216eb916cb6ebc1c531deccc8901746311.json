{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\53068\\\\Documents\\\\GitHub\\\\dsci551_project\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, TextField, Button, Select, MenuItem, FormControl, InputLabel, Box, Typography, Paper, Accordion, AccordionSummary, AccordionDetails, Tabs, Tab } from '@mui/material';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction DataTable({\n  data,\n  title\n}) {\n  if (!data || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      gutterBottom: true,\n      children: [\"No data found for \", title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Collect all unique keys for table headers\n  const allKeys = new Set();\n  data.forEach(item => {\n    Object.keys(item).forEach(key => allKeys.add(key));\n  });\n  const columns = Array.from(allKeys);\n\n  // Format cell value to handle different data types\n  const formatCellValue = value => {\n    if (value === null || value === undefined) {\n      return '';\n    }\n\n    // Handle arrays\n    if (Array.isArray(value)) {\n      return value.map(item => typeof item === 'object' && item !== null ? JSON.stringify(item) : String(item)).join(', ');\n    }\n\n    // Handle objects\n    if (typeof value === 'object' && value !== null) {\n      return JSON.stringify(value);\n    }\n\n    // Handle primitive values\n    return String(value);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mb: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      gutterBottom: true,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        overflowX: 'auto',\n        border: '1px solid #ddd'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          borderCollapse: 'collapse',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: columns.map(col => /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                padding: '8px',\n                background: '#f0f0f0',\n                borderBottom: '1px solid #ccc',\n                textAlign: 'left'\n              },\n              children: col\n            }, col, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: data.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: columns.map(col => /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: '8px',\n                borderBottom: '1px solid #eee',\n                verticalAlign: 'top'\n              },\n              children: formatCellValue(row[col])\n            }, col, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, this))\n          }, rowIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n// Component to display schema information\n_c = DataTable;\nfunction SchemaDisplay({\n  data,\n  title\n}) {\n  if (!data || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      gutterBottom: true,\n      children: [\"No schema information available for \", title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mb: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      gutterBottom: true,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        overflowX: 'auto',\n        border: '1px solid #ddd'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          borderCollapse: 'collapse',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.keys(data[0]).map(col => /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                padding: '8px',\n                background: '#f0f0f0',\n                borderBottom: '1px solid #ccc',\n                textAlign: 'left'\n              },\n              children: col\n            }, col, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: data.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.entries(row).map(([key, value]) => /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: '8px',\n                borderBottom: '1px solid #eee',\n                verticalAlign: 'top'\n              },\n              children: value !== null && value !== undefined ? String(value) : ''\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 19\n            }, this))\n          }, rowIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n\n// Component to display Firebase/complex schema\n_c2 = SchemaDisplay;\nfunction StructureDisplay({\n  data,\n  title\n}) {\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      gutterBottom: true,\n      children: [\"No structure information available for \", title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mb: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      gutterBottom: true,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 0,\n      sx: {\n        p: 2,\n        backgroundColor: '#f5f5f5'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          margin: 0,\n          overflow: 'auto'\n        },\n        children: JSON.stringify(data, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n}\n\n// Component to display a list of tables/collections/nodes\n_c3 = StructureDisplay;\nfunction ListDisplay({\n  data,\n  title\n}) {\n  if (!data || data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      gutterBottom: true,\n      children: [\"No items found for \", title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      mb: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"subtitle1\",\n      gutterBottom: true,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        border: '1px solid #ddd',\n        p: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          margin: 0,\n          paddingLeft: 20\n        },\n        children: data.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: item\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n}\n\n// Fields to display in merged results.\n_c4 = ListDisplay;\nconst MERGED_COLUMNS = [\"id\", \"name\", \"price\", \"room_type\", \"listing_url\", \"description\"];\nfunction filterColumns(dataArray, desiredFields) {\n  if (!Array.isArray(dataArray)) return [];\n  return dataArray.map(item => {\n    const filtered = {};\n    desiredFields.forEach(field => {\n      if (item[field] !== undefined) {\n        filtered[field] = item[field];\n      }\n    });\n    return filtered;\n  });\n}\nfunction App() {\n  _s();\n  const [operation, setOperation] = useState('query');\n  const [query, setQuery] = useState('');\n  const [database, setDatabase] = useState('mysql');\n  const [result, setResult] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [showRawResults, setShowRawResults] = useState(true);\n  const [showRawOutput, setShowRawOutput] = useState(false);\n  const [showMySQL, setShowMySQL] = useState(true);\n  const [showMongo, setShowMongo] = useState(true);\n  const [showFirebase, setShowFirebase] = useState(true);\n  const [activeTab, setActiveTab] = useState(0);\n  const [modifyResult, setModifyResult] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setModifyResult(null);\n    try {\n      let response;\n      if (operation === 'query') {\n        response = await axios.post('http://localhost:8000/query', {\n          query,\n          db_type: database\n        });\n      } else if (operation === 'explore') {\n        response = await axios.post('http://localhost:8000/explore', {\n          query,\n          db_type: database\n        });\n      } else if (operation === 'modify') {\n        response = await axios.post('http://localhost:8000/modify', {\n          modification: query,\n          db_type: database\n        });\n        setModifyResult(response.data);\n      }\n      setResult(response.data);\n    } catch (error) {\n      setResult({\n        error: error.message\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleClear = () => {\n    setResult(null);\n    setQuery('');\n    setModifyResult(null);\n  };\n\n  // Parse different types of responses\n  const isExploration = operation === 'explore' && result && result.exploration_type;\n  const explorationData = isExploration ? result : null;\n\n  // Regular query response handling\n  const converted = !isExploration && result ? result.converted_queries : null;\n  const results = !isExploration && result ? result.results : null;\n  const {\n    mysql,\n    mongodb,\n    firebase\n  } = results || {};\n\n  // Modified result checking logic\n  const hasMySQL = mysql && (Array.isArray(mysql) ? mysql.length > 0 : true);\n  const hasMongoDB = mongodb && typeof mongodb === 'object' && Object.keys(mongodb).length > 0;\n  const hasFirebase = firebase && typeof firebase === 'object' && Object.keys(firebase).length > 0;\n\n  // Debug logging\n  console.log('Result:', result);\n  console.log('Results:', results);\n  console.log('MySQL:', mysql);\n  console.log('MongoDB:', mongodb);\n  console.log('Firebase:', firebase);\n\n  // Render exploration content based on result type\n  const renderExplorationContent = () => {\n    if (!explorationData) return null;\n    const {\n      exploration_type,\n      message,\n      data,\n      db_type\n    } = explorationData;\n    switch (exploration_type) {\n      case 'tables':\n      case 'collections':\n      case 'nodes':\n        return /*#__PURE__*/_jsxDEV(ListDisplay, {\n          data: data,\n          title: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 16\n        }, this);\n      case 'schema':\n        if (db_type === 'firebase') {\n          return /*#__PURE__*/_jsxDEV(StructureDisplay, {\n            data: data,\n            title: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 18\n          }, this);\n        }\n        return /*#__PURE__*/_jsxDEV(SchemaDisplay, {\n          data: data,\n          title: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 16\n        }, this);\n      case 'sample_data':\n        return /*#__PURE__*/_jsxDEV(DataTable, {\n          data: data,\n          title: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 16\n        }, this);\n      case 'error':\n        return /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"error\",\n          variant: \"body1\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 11\n        }, this);\n      default:\n        // If we get regular query results through exploration endpoint\n        if (data && Array.isArray(data)) {\n          return /*#__PURE__*/_jsxDEV(DataTable, {\n            data: data,\n            title: \"Exploration Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 18\n          }, this);\n        }\n        return /*#__PURE__*/_jsxDEV(\"pre\", {\n          style: {\n            backgroundColor: '#f5f5f5',\n            padding: '8px',\n            overflowX: 'auto'\n          },\n          children: JSON.stringify(explorationData, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this);\n    }\n  };\n  const getExampleQueries = () => {\n    switch (operation) {\n      case 'explore':\n        return [\"What tables are in the database?\", \"Show me the schema of the Listings table\", \"What columns are in the Reviews table?\", \"Show me 5 sample rows from the Hosts table\", \"What collections are in MongoDB?\", \"Show me the structure of the Firebase listings node\"];\n      case 'modify':\n        return [\"Add a new listing with name 'Luxury Apartment' and price 200\", \"Delete the listing with id 123\", \"Update the price of listing with id 456 to 300\", \"Insert a new review for listing 789 with rating 5\"];\n      case 'query':\n      default:\n        return [\"Show me listings with more than 50 reviews\", \"Find all listings with price less than $100\", \"Get listings in Manhattan with 2 or more bedrooms\", \"Show me the most expensive listings\"];\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      mt: 4,\n      mb: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 3,\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"ChatDB - Natural Language Interface\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Operation Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: operation,\n              label: \"Operation Type\",\n              onChange: e => setOperation(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"query\",\n                children: \"Query\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"explore\",\n                children: \"Explore Schema\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"modify\",\n                children: \"Modify Data\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Database\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: database,\n              label: \"Database\",\n              onChange: e => setDatabase(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"mysql\",\n                children: \"MySQL\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"mongodb\",\n                children: \"MongoDB\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"firebase\",\n                children: \"Firebase\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            multiline: true,\n            rows: 4,\n            label: operation === 'query' ? \"Enter your query in natural language\" : operation === 'explore' ? \"Enter your schema exploration question\" : \"Enter your data modification request\",\n            value: query,\n            onChange: e => setQuery(e.target.value),\n            placeholder: operation === 'query' ? \"e.g., Show me the listings with the highest number of reviews\" : operation === 'explore' ? \"e.g., What tables are in the database? or Show me the schema of Listings table\" : \"e.g., Add a new listing with name 'Luxury Apartment' and price 200\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            children: \"Example questions:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              flexWrap: 'wrap',\n              gap: 1,\n              mt: 0.5\n            },\n            children: getExampleQueries().map((example, i) => /*#__PURE__*/_jsxDEV(Button, {\n              size: \"small\",\n              variant: \"outlined\",\n              onClick: () => setQuery(example),\n              sx: {\n                mb: 1\n              },\n              children: example\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            gap: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            type: \"submit\",\n            disabled: loading || !query,\n            fullWidth: true,\n            children: loading ? 'Processing...' : operation === 'query' ? 'Execute Query' : operation === 'explore' ? 'Explore' : 'Modify Data'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"error\",\n            onClick: handleClear,\n            disabled: loading || !query && !result,\n            fullWidth: true,\n            children: \"Clear All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 3,\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: operation === 'explore' ? 'Schema Exploration Results' : operation === 'modify' ? 'Modification Results' : 'Query Results'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 11\n      }, this), operation === 'modify' && modifyResult ? /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          color: modifyResult.success ? 'success.main' : 'error.main',\n          gutterBottom: true,\n          children: modifyResult.message || \"Modification processed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            children: \"Converted Modifications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            style: {\n              backgroundColor: '#f5f5f5',\n              padding: '8px',\n              overflowX: 'auto'\n            },\n            children: JSON.stringify(modifyResult.converted_modifications, null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 15\n        }, this), modifyResult.results && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            children: \"Modification Results\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            style: {\n              backgroundColor: '#f5f5f5',\n              padding: '8px',\n              overflowX: 'auto'\n            },\n            children: JSON.stringify(modifyResult.results, null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 13\n      }, this) : isExploration ? renderExplorationContent() : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 2,\n            display: 'flex',\n            justifyContent: 'flex-end',\n            gap: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"text\",\n            onClick: () => setShowRawResults(!showRawResults),\n            children: showRawResults ? 'Hide Converted Queries' : 'Show Converted Queries'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"text\",\n            onClick: () => setShowRawOutput(!showRawOutput),\n            children: showRawOutput ? 'Hide Raw Output' : 'Show Raw Output'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 15\n        }, this), showRawResults && converted && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            children: \"Converted Queries\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            style: {\n              backgroundColor: '#f5f5f5',\n              padding: '8px',\n              overflowX: 'auto'\n            },\n            children: JSON.stringify(converted, null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 17\n        }, this), showRawOutput && /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mb: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            gutterBottom: true,\n            children: \"Raw Output\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            style: {\n              backgroundColor: '#f5f5f5',\n              padding: '8px',\n              overflowX: 'auto'\n            },\n            children: JSON.stringify(result, null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          gutterBottom: true,\n          children: \"Individual Database Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 15\n        }, this), database === 'mysql' && /*#__PURE__*/_jsxDEV(Accordion, {\n          expanded: showMySQL,\n          onChange: () => setShowMySQL(!showMySQL),\n          children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n            expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 49\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              children: \"MySQL Results\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n            children: hasMySQL ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [converted && converted.mysql && /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mb: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  gutterBottom: true,\n                  children: \"Executed Query:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 582,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Paper, {\n                  elevation: 0,\n                  sx: {\n                    p: 2,\n                    bgcolor: '#f8f9fa',\n                    mb: 2\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"code\", {\n                    children: converted.mysql\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 584,\n                    columnNumber: 31\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 583,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 581,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n                data: Array.isArray(mysql) ? mysql : [mysql],\n                title: \"MySQL\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 588,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: \"No results from MySQL.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 17\n        }, this), database === 'mongodb' && /*#__PURE__*/_jsxDEV(Accordion, {\n          expanded: showMongo,\n          onChange: () => setShowMongo(!showMongo),\n          children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n            expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 600,\n              columnNumber: 49\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              children: \"MongoDB Results\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 600,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n            children: hasMongoDB ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [converted && converted.mongodb && /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mb: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  gutterBottom: true,\n                  children: \"Executed Query:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 608,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Paper, {\n                  elevation: 0,\n                  sx: {\n                    p: 2,\n                    bgcolor: '#f8f9fa',\n                    mb: 2\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"pre\", {\n                    style: {\n                      margin: 0\n                    },\n                    children: typeof converted.mongodb === 'string' ? converted.mongodb : JSON.stringify(converted.mongodb, null, 2)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 610,\n                    columnNumber: 31\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 609,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 607,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(DataTable, {\n                data: Array.isArray(mongodb) ? mongodb : [mongodb],\n                title: \"MongoDB\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 618,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: \"No results from MongoDB.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 624,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 17\n        }, this), database === 'firebase' && /*#__PURE__*/_jsxDEV(Accordion, {\n          expanded: showFirebase,\n          onChange: () => setShowFirebase(!showFirebase),\n          children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n            expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 633,\n              columnNumber: 49\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"subtitle1\",\n              children: \"Firebase Results\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 634,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n            children: hasFirebase ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [converted && converted.firebase && /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mb: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle2\",\n                  gutterBottom: true,\n                  children: \"Executed Query:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 641,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Paper, {\n                  elevation: 0,\n                  sx: {\n                    p: 2,\n                    bgcolor: '#f8f9fa',\n                    mb: 2\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"pre\", {\n                    style: {\n                      margin: 0\n                    },\n                    children: typeof converted.firebase === 'string' ? converted.firebase : JSON.stringify(converted.firebase, null, 2)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 643,\n                    columnNumber: 31\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 642,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 640,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n                style: {\n                  backgroundColor: '#f5f5f5',\n                  padding: '8px'\n                },\n                children: JSON.stringify(firebase, null, 2)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 651,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              children: \"No results from Firebase.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 656,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 636,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 384,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"YfUQ8IZhOgOR86j2ytXMao+dDMU=\");\n_c5 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"DataTable\");\n$RefreshReg$(_c2, \"SchemaDisplay\");\n$RefreshReg$(_c3, \"StructureDisplay\");\n$RefreshReg$(_c4, \"ListDisplay\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["React","useState","Container","TextField","Button","Select","MenuItem","FormControl","InputLabel","Box","Typography","Paper","Accordion","AccordionSummary","AccordionDetails","Tabs","Tab","ExpandMoreIcon","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","DataTable","data","title","length","variant","gutterBottom","children","fileName","_jsxFileName","lineNumber","columnNumber","allKeys","Set","forEach","item","Object","keys","key","add","columns","Array","from","formatCellValue","value","undefined","isArray","map","JSON","stringify","String","join","sx","mb","overflowX","border","style","borderCollapse","width","col","padding","background","borderBottom","textAlign","row","rowIndex","verticalAlign","_c","SchemaDisplay","entries","_c2","StructureDisplay","elevation","p","backgroundColor","margin","overflow","_c3","ListDisplay","paddingLeft","index","_c4","MERGED_COLUMNS","filterColumns","dataArray","desiredFields","filtered","field","App","_s","operation","setOperation","query","setQuery","database","setDatabase","result","setResult","loading","setLoading","showRawResults","setShowRawResults","showRawOutput","setShowRawOutput","showMySQL","setShowMySQL","showMongo","setShowMongo","showFirebase","setShowFirebase","activeTab","setActiveTab","modifyResult","setModifyResult","handleSubmit","e","preventDefault","response","post","db_type","modification","error","message","handleClear","isExploration","exploration_type","explorationData","converted","converted_queries","results","mysql","mongodb","firebase","hasMySQL","hasMongoDB","hasFirebase","console","log","renderExplorationContent","color","getExampleQueries","maxWidth","mt","onSubmit","fullWidth","label","onChange","target","multiline","rows","placeholder","display","flexWrap","gap","example","i","size","onClick","type","disabled","success","converted_modifications","justifyContent","expanded","expandIcon","bgcolor","_c5","$RefreshReg$"],"sources":["C:/Users/53068/Documents/GitHub/dsci551_project/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  Container,\r\n  TextField,\r\n  Button,\r\n  Select,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  Box,\r\n  Typography,\r\n  Paper,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Tabs,\r\n  Tab\r\n} from '@mui/material';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport axios from 'axios';\r\n\r\nfunction DataTable({ data, title }) {\r\n  if (!data || data.length === 0) {\r\n    return (\r\n      <Typography variant=\"subtitle1\" gutterBottom>\r\n        No data found for {title}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n  // Collect all unique keys for table headers\r\n  const allKeys = new Set();\r\n  data.forEach((item) => {\r\n    Object.keys(item).forEach((key) => allKeys.add(key));\r\n  });\r\n  const columns = Array.from(allKeys);\r\n\r\n  // Format cell value to handle different data types\r\n  const formatCellValue = (value) => {\r\n    if (value === null || value === undefined) {\r\n      return '';\r\n    }\r\n    \r\n    // Handle arrays\r\n    if (Array.isArray(value)) {\r\n      return value.map(item => \r\n        typeof item === 'object' && item !== null \r\n          ? JSON.stringify(item) \r\n          : String(item)\r\n      ).join(', ');\r\n    }\r\n    \r\n    // Handle objects\r\n    if (typeof value === 'object' && value !== null) {\r\n      return JSON.stringify(value);\r\n    }\r\n    \r\n    // Handle primitive values\r\n    return String(value);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ mb: 2 }}>\r\n      <Typography variant=\"subtitle1\" gutterBottom>\r\n        {title}\r\n      </Typography>\r\n      <Box sx={{ overflowX: 'auto', border: '1px solid #ddd' }}>\r\n        <table style={{ borderCollapse: 'collapse', width: '100%' }}>\r\n          <thead>\r\n            <tr>\r\n              {columns.map((col) => (\r\n                <th\r\n                  key={col}\r\n                  style={{\r\n                    padding: '8px',\r\n                    background: '#f0f0f0',\r\n                    borderBottom: '1px solid #ccc',\r\n                    textAlign: 'left'\r\n                  }}\r\n                >\r\n                  {col}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.map((row, rowIndex) => (\r\n              <tr key={rowIndex}>\r\n                {columns.map((col) => (\r\n                  <td\r\n                    key={col}\r\n                    style={{\r\n                      padding: '8px',\r\n                      borderBottom: '1px solid #eee',\r\n                      verticalAlign: 'top'\r\n                    }}\r\n                  >\r\n                    {formatCellValue(row[col])}\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\n// Component to display schema information\r\nfunction SchemaDisplay({ data, title }) {\r\n  if (!data || data.length === 0) {\r\n    return (\r\n      <Typography variant=\"subtitle1\" gutterBottom>\r\n        No schema information available for {title}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ mb: 2 }}>\r\n      <Typography variant=\"subtitle1\" gutterBottom>\r\n        {title}\r\n      </Typography>\r\n      <Box sx={{ overflowX: 'auto', border: '1px solid #ddd' }}>\r\n        <table style={{ borderCollapse: 'collapse', width: '100%' }}>\r\n          <thead>\r\n            <tr>\r\n              {Object.keys(data[0]).map((col) => (\r\n                <th\r\n                  key={col}\r\n                  style={{\r\n                    padding: '8px',\r\n                    background: '#f0f0f0',\r\n                    borderBottom: '1px solid #ccc',\r\n                    textAlign: 'left'\r\n                  }}\r\n                >\r\n                  {col}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.map((row, rowIndex) => (\r\n              <tr key={rowIndex}>\r\n                {Object.entries(row).map(([key, value]) => (\r\n                  <td\r\n                    key={key}\r\n                    style={{\r\n                      padding: '8px',\r\n                      borderBottom: '1px solid #eee',\r\n                      verticalAlign: 'top'\r\n                    }}\r\n                  >\r\n                    {value !== null && value !== undefined ? String(value) : ''}\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\n// Component to display Firebase/complex schema\r\nfunction StructureDisplay({ data, title }) {\r\n  if (!data) {\r\n    return (\r\n      <Typography variant=\"subtitle1\" gutterBottom>\r\n        No structure information available for {title}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ mb: 2 }}>\r\n      <Typography variant=\"subtitle1\" gutterBottom>\r\n        {title}\r\n      </Typography>\r\n      <Paper elevation={0} sx={{ p: 2, backgroundColor: '#f5f5f5' }}>\r\n        <pre style={{ margin: 0, overflow: 'auto' }}>\r\n          {JSON.stringify(data, null, 2)}\r\n        </pre>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}\r\n\r\n// Component to display a list of tables/collections/nodes\r\nfunction ListDisplay({ data, title }) {\r\n  if (!data || data.length === 0) {\r\n    return (\r\n      <Typography variant=\"subtitle1\" gutterBottom>\r\n        No items found for {title}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ mb: 2 }}>\r\n      <Typography variant=\"subtitle1\" gutterBottom>\r\n        {title}\r\n      </Typography>\r\n      <Box sx={{ border: '1px solid #ddd', p: 2 }}>\r\n        <ul style={{ margin: 0, paddingLeft: 20 }}>\r\n          {data.map((item, index) => (\r\n            <li key={index}>{item}</li>\r\n          ))}\r\n        </ul>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\n// Fields to display in merged results.\r\nconst MERGED_COLUMNS = [\r\n  \"id\",\r\n  \"name\",\r\n  \"price\",\r\n  \"room_type\",\r\n  \"listing_url\",\r\n  \"description\"\r\n];\r\n\r\nfunction filterColumns(dataArray, desiredFields) {\r\n  if (!Array.isArray(dataArray)) return [];\r\n  return dataArray.map(item => {\r\n    const filtered = {};\r\n    desiredFields.forEach(field => {\r\n      if (item[field] !== undefined) {\r\n        filtered[field] = item[field];\r\n      }\r\n    });\r\n    return filtered;\r\n  });\r\n}\r\n\r\nfunction App() {\r\n  const [operation, setOperation] = useState('query');\r\n  const [query, setQuery] = useState('');\r\n  const [database, setDatabase] = useState('mysql');\r\n  const [result, setResult] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [showRawResults, setShowRawResults] = useState(true);\r\n  const [showRawOutput, setShowRawOutput] = useState(false);\r\n  const [showMySQL, setShowMySQL] = useState(true);\r\n  const [showMongo, setShowMongo] = useState(true);\r\n  const [showFirebase, setShowFirebase] = useState(true);\r\n  const [activeTab, setActiveTab] = useState(0);\r\n  const [modifyResult, setModifyResult] = useState(null);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setModifyResult(null);\r\n    try {\r\n      let response;\r\n      if (operation === 'query') {\r\n        response = await axios.post('http://localhost:8000/query', {\r\n          query,\r\n          db_type: database\r\n        });\r\n      } else if (operation === 'explore') {\r\n        response = await axios.post('http://localhost:8000/explore', {\r\n          query,\r\n          db_type: database\r\n        });\r\n      } else if (operation === 'modify') {\r\n        response = await axios.post('http://localhost:8000/modify', {\r\n          modification: query,\r\n          db_type: database\r\n        });\r\n        setModifyResult(response.data);\r\n      }\r\n      setResult(response.data);\r\n    } catch (error) {\r\n      setResult({ error: error.message });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setResult(null);\r\n    setQuery('');\r\n    setModifyResult(null);\r\n  };\r\n\r\n  // Parse different types of responses\r\n  const isExploration = operation === 'explore' && result && result.exploration_type;\r\n  const explorationData = isExploration ? result : null;\r\n  \r\n  // Regular query response handling\r\n  const converted = !isExploration && result ? result.converted_queries : null;\r\n  const results = !isExploration && result ? result.results : null;\r\n  const { mysql, mongodb, firebase } = results || {};\r\n\r\n  // Modified result checking logic\r\n  const hasMySQL = mysql && (Array.isArray(mysql) ? mysql.length > 0 : true);\r\n  const hasMongoDB = mongodb && (typeof mongodb === 'object' && Object.keys(mongodb).length > 0);\r\n  const hasFirebase = firebase && (typeof firebase === 'object' && Object.keys(firebase).length > 0);\r\n\r\n  // Debug logging\r\n  console.log('Result:', result);\r\n  console.log('Results:', results);\r\n  console.log('MySQL:', mysql);\r\n  console.log('MongoDB:', mongodb);\r\n  console.log('Firebase:', firebase);\r\n\r\n  // Render exploration content based on result type\r\n  const renderExplorationContent = () => {\r\n    if (!explorationData) return null;\r\n\r\n    const { exploration_type, message, data, db_type } = explorationData;\r\n\r\n    switch (exploration_type) {\r\n      case 'tables':\r\n      case 'collections':\r\n      case 'nodes':\r\n        return <ListDisplay data={data} title={message} />;\r\n      \r\n      case 'schema':\r\n        if (db_type === 'firebase') {\r\n          return <StructureDisplay data={data} title={message} />;\r\n        }\r\n        return <SchemaDisplay data={data} title={message} />;\r\n      \r\n      case 'sample_data':\r\n        return <DataTable data={data} title={message} />;\r\n      \r\n      case 'error':\r\n        return (\r\n          <Typography color=\"error\" variant=\"body1\">\r\n            {message}\r\n          </Typography>\r\n        );\r\n      \r\n      default:\r\n        // If we get regular query results through exploration endpoint\r\n        if (data && Array.isArray(data)) {\r\n          return <DataTable data={data} title=\"Exploration Results\" />;\r\n        }\r\n        return (\r\n          <pre style={{ backgroundColor: '#f5f5f5', padding: '8px', overflowX: 'auto' }}>\r\n            {JSON.stringify(explorationData, null, 2)}\r\n          </pre>\r\n        );\r\n    }\r\n  };\r\n\r\n  const getExampleQueries = () => {\r\n    switch (operation) {\r\n      case 'explore':\r\n        return [\r\n          \"What tables are in the database?\",\r\n          \"Show me the schema of the Listings table\",\r\n          \"What columns are in the Reviews table?\",\r\n          \"Show me 5 sample rows from the Hosts table\",\r\n          \"What collections are in MongoDB?\",\r\n          \"Show me the structure of the Firebase listings node\"\r\n        ];\r\n      case 'modify':\r\n        return [\r\n          \"Add a new listing with name 'Luxury Apartment' and price 200\",\r\n          \"Delete the listing with id 123\",\r\n          \"Update the price of listing with id 456 to 300\",\r\n          \"Insert a new review for listing 789 with rating 5\"\r\n        ];\r\n      case 'query':\r\n      default:\r\n        return [\r\n          \"Show me listings with more than 50 reviews\",\r\n          \"Find all listings with price less than $100\",\r\n          \"Get listings in Manhattan with 2 or more bedrooms\",\r\n          \"Show me the most expensive listings\"\r\n        ];\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\r\n      {/* Query/Exploration Form Section */}\r\n      <Paper elevation={3} sx={{ p: 3, mb: 3 }}>\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          ChatDB - Natural Language Interface\r\n        </Typography>\r\n        <form onSubmit={handleSubmit}>\r\n          <Box sx={{ mb: 2 }}>\r\n            <FormControl fullWidth>\r\n              <InputLabel>Operation Type</InputLabel>\r\n              <Select\r\n                value={operation}\r\n                label=\"Operation Type\"\r\n                onChange={(e) => setOperation(e.target.value)}\r\n              >\r\n                <MenuItem value=\"query\">Query</MenuItem>\r\n                <MenuItem value=\"explore\">Explore Schema</MenuItem>\r\n                <MenuItem value=\"modify\">Modify Data</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Box>\r\n\r\n          <Box sx={{ mb: 2 }}>\r\n            <FormControl fullWidth>\r\n              <InputLabel>Database</InputLabel>\r\n              <Select\r\n                value={database}\r\n                label=\"Database\"\r\n                onChange={(e) => setDatabase(e.target.value)}\r\n              >\r\n                <MenuItem value=\"mysql\">MySQL</MenuItem>\r\n                <MenuItem value=\"mongodb\">MongoDB</MenuItem>\r\n                <MenuItem value=\"firebase\">Firebase</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Box>\r\n\r\n          <Box sx={{ mb: 2 }}>\r\n            <TextField\r\n              fullWidth\r\n              multiline\r\n              rows={4}\r\n              label={\r\n                operation === 'query'\r\n                  ? \"Enter your query in natural language\"\r\n                  : operation === 'explore'\r\n                  ? \"Enter your schema exploration question\"\r\n                  : \"Enter your data modification request\"\r\n              }\r\n              value={query}\r\n              onChange={(e) => setQuery(e.target.value)}\r\n              placeholder={\r\n                operation === 'query'\r\n                  ? \"e.g., Show me the listings with the highest number of reviews\"\r\n                  : operation === 'explore'\r\n                  ? \"e.g., What tables are in the database? or Show me the schema of Listings table\"\r\n                  : \"e.g., Add a new listing with name 'Luxury Apartment' and price 200\"\r\n              }\r\n            />\r\n          </Box>\r\n\r\n          <Box sx={{ mb: 1 }}>\r\n            <Typography variant=\"body2\" color=\"textSecondary\">\r\n              Example questions:\r\n            </Typography>\r\n            <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1, mt: 0.5 }}>\r\n              {getExampleQueries().map((example, i) => (\r\n                <Button \r\n                  key={i} \r\n                  size=\"small\" \r\n                  variant=\"outlined\" \r\n                  onClick={() => setQuery(example)}\r\n                  sx={{ mb: 1 }}\r\n                >\r\n                  {example}\r\n                </Button>\r\n              ))}\r\n            </Box>\r\n          </Box>\r\n\r\n          <Box sx={{ display: 'flex', gap: 2 }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              type=\"submit\"\r\n              disabled={loading || !query}\r\n              fullWidth\r\n            >\r\n              {loading ? 'Processing...' : (\r\n                operation === 'query' ? 'Execute Query' :\r\n                operation === 'explore' ? 'Explore' :\r\n                'Modify Data'\r\n              )}\r\n            </Button>\r\n            <Button\r\n              variant=\"outlined\"\r\n              color=\"error\"\r\n              onClick={handleClear}\r\n              disabled={loading || (!query && !result)}\r\n              fullWidth\r\n            >\r\n              Clear All\r\n            </Button>\r\n          </Box>\r\n        </form>\r\n      </Paper>\r\n\r\n      {/* Results Section */}\r\n      {result && (\r\n        <Paper elevation={3} sx={{ p: 3, mb: 3 }}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            {operation === 'explore' ? 'Schema Exploration Results' : \r\n             operation === 'modify' ? 'Modification Results' : 'Query Results'}\r\n          </Typography>\r\n\r\n          {operation === 'modify' && modifyResult ? (\r\n            <Box sx={{ mb: 3 }}>\r\n              <Typography \r\n                variant=\"subtitle1\" \r\n                color={modifyResult.success ? 'success.main' : 'error.main'}\r\n                gutterBottom\r\n              >\r\n                {modifyResult.message || \"Modification processed\"}\r\n              </Typography>\r\n              <Box sx={{ mb: 3 }}>\r\n                <Typography variant=\"subtitle1\" gutterBottom>\r\n                  Converted Modifications\r\n                </Typography>\r\n                <pre style={{ backgroundColor: '#f5f5f5', padding: '8px', overflowX: 'auto' }}>\r\n                  {JSON.stringify(modifyResult.converted_modifications, null, 2)}\r\n                </pre>\r\n              </Box>\r\n              {modifyResult.results && (\r\n                <Box sx={{ mb: 3 }}>\r\n                  <Typography variant=\"subtitle1\" gutterBottom>\r\n                    Modification Results\r\n                  </Typography>\r\n                  <pre style={{ backgroundColor: '#f5f5f5', padding: '8px', overflowX: 'auto' }}>\r\n                    {JSON.stringify(modifyResult.results, null, 2)}\r\n                  </pre>\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          ) : isExploration ? (\r\n            renderExplorationContent()\r\n          ) : (\r\n            <>\r\n              {/* Toggle for Converted Queries and Raw Output */}\r\n              <Box sx={{ mb: 2, display: 'flex', justifyContent: 'flex-end', gap: 2 }}>\r\n                <Button\r\n                  variant=\"text\"\r\n                  onClick={() => setShowRawResults(!showRawResults)}\r\n                >\r\n                  {showRawResults ? 'Hide Converted Queries' : 'Show Converted Queries'}\r\n                </Button>\r\n                <Button\r\n                  variant=\"text\"\r\n                  onClick={() => setShowRawOutput(!showRawOutput)}\r\n                >\r\n                  {showRawOutput ? 'Hide Raw Output' : 'Show Raw Output'}\r\n                </Button>\r\n              </Box>\r\n\r\n              {showRawResults && converted && (\r\n                <Box sx={{ mb: 3 }}>\r\n                  <Typography variant=\"subtitle1\" gutterBottom>\r\n                    Converted Queries\r\n                  </Typography>\r\n                  <pre style={{ backgroundColor: '#f5f5f5', padding: '8px', overflowX: 'auto' }}>\r\n                    {JSON.stringify(converted, null, 2)}\r\n                  </pre>\r\n                </Box>\r\n              )}\r\n              \r\n              {showRawOutput && (\r\n                <Box sx={{ mb: 3 }}>\r\n                  <Typography variant=\"subtitle1\" gutterBottom>\r\n                    Raw Output\r\n                  </Typography>\r\n                  <pre style={{ backgroundColor: '#f5f5f5', padding: '8px', overflowX: 'auto' }}>\r\n                    {JSON.stringify(result, null, 2)}\r\n                  </pre>\r\n                </Box>\r\n              )}\r\n\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                Individual Database Results\r\n              </Typography>\r\n              {/* MySQL 结果 */}\r\n              {database === 'mysql' && (\r\n                <Accordion expanded={showMySQL} onChange={() => setShowMySQL(!showMySQL)}>\r\n                  <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                    <Typography variant=\"subtitle1\">MySQL Results</Typography>\r\n                  </AccordionSummary>\r\n                  <AccordionDetails>\r\n                    {hasMySQL ? (\r\n                      <>\r\n                        {converted && converted.mysql && (\r\n                          <Box sx={{ mb: 2 }}>\r\n                            <Typography variant=\"subtitle2\" gutterBottom>Executed Query:</Typography>\r\n                            <Paper elevation={0} sx={{ p: 2, bgcolor: '#f8f9fa', mb: 2 }}>\r\n                              <code>{converted.mysql}</code>\r\n                            </Paper>\r\n                          </Box>\r\n                        )}\r\n                        <DataTable data={Array.isArray(mysql) ? mysql : [mysql]} title=\"MySQL\" />\r\n                      </>\r\n                    ) : (\r\n                      <Typography variant=\"body2\">No results from MySQL.</Typography>\r\n                    )}\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n              )}\r\n\r\n              {/* MongoDB 结果 */}\r\n              {database === 'mongodb' && (\r\n                <Accordion expanded={showMongo} onChange={() => setShowMongo(!showMongo)}>\r\n                  <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                    <Typography variant=\"subtitle1\">MongoDB Results</Typography>\r\n                  </AccordionSummary>\r\n                  <AccordionDetails>\r\n                    {hasMongoDB ? (\r\n                      <>\r\n                        {converted && converted.mongodb && (\r\n                          <Box sx={{ mb: 2 }}>\r\n                            <Typography variant=\"subtitle2\" gutterBottom>Executed Query:</Typography>\r\n                            <Paper elevation={0} sx={{ p: 2, bgcolor: '#f8f9fa', mb: 2 }}>\r\n                              <pre style={{ margin: 0 }}>\r\n                                {typeof converted.mongodb === 'string' \r\n                                  ? converted.mongodb \r\n                                  : JSON.stringify(converted.mongodb, null, 2)}\r\n                              </pre>\r\n                            </Paper>\r\n                          </Box>\r\n                        )}\r\n                        <DataTable \r\n                          data={Array.isArray(mongodb) ? mongodb : [mongodb]} \r\n                          title=\"MongoDB\" \r\n                        />\r\n                      </>\r\n                    ) : (\r\n                      <Typography variant=\"body2\">No results from MongoDB.</Typography>\r\n                    )}\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n              )}\r\n\r\n              {/* Firebase 结果 */}\r\n              {database === 'firebase' && (\r\n                <Accordion expanded={showFirebase} onChange={() => setShowFirebase(!showFirebase)}>\r\n                  <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n                    <Typography variant=\"subtitle1\">Firebase Results</Typography>\r\n                  </AccordionSummary>\r\n                  <AccordionDetails>\r\n                    {hasFirebase ? (\r\n                      <>\r\n                        {converted && converted.firebase && (\r\n                          <Box sx={{ mb: 2 }}>\r\n                            <Typography variant=\"subtitle2\" gutterBottom>Executed Query:</Typography>\r\n                            <Paper elevation={0} sx={{ p: 2, bgcolor: '#f8f9fa', mb: 2 }}>\r\n                              <pre style={{ margin: 0 }}>\r\n                                {typeof converted.firebase === 'string' \r\n                                  ? converted.firebase \r\n                                  : JSON.stringify(converted.firebase, null, 2)}\r\n                              </pre>\r\n                            </Paper>\r\n                          </Box>\r\n                        )}\r\n                        <pre style={{ backgroundColor: '#f5f5f5', padding: '8px' }}>\r\n                          {JSON.stringify(firebase, null, 2)}\r\n                        </pre>\r\n                      </>\r\n                    ) : (\r\n                      <Typography variant=\"body2\">No results from Firebase.</Typography>\r\n                    )}\r\n                  </AccordionDetails>\r\n                </Accordion>\r\n              )}\r\n            </>\r\n          )}\r\n        </Paper>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}